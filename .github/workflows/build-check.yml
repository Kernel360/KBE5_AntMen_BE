# .github/workflows/build-check.yml

name: Build Check

on:
  pull_request:
    branches: [ '**' ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew build -x test
      env:
        GRADLE_OPTS: "-Dorg.gradle.daemon=false"
        JAVA_OPTS: "-Xmx2048m"
      
    - name: Upload build reports
      if: always()
      uses: actions/upload-artifact@v4  # v3에서 v4로 업데이트
      with:
        name: build-reports
        path: build/reports/
        if-no-files-found: error

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          const branch = context.ref.replace('refs/heads/', '');
          const commit = context.sha;
          const commitUrl = `https://github.com/${owner}/${repo}/commit/${commit}`;
          
          let message = `❌ 빌드 실패 알림\n\n`;
          message += `브랜치: ${branch}\n`;
          message += `커밋: ${commitUrl}\n`;
          message += `작업자: ${context.actor}\n\n`;
          message += `테스트를 제외한 빌드가 실패했습니다. 자세한 내용은 GitHub Actions 로그를 확인해주세요.`;
          
          if (context.payload.pull_request) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: owner,
              repo: repo,
              body: message
            });
          } else {
            github.rest.issues.create({
              owner: owner,
              repo: repo,
              title: `[빌드 실패] ${branch} 브랜치`,
              body: message,
              labels: ['build-failure']
            });
          }

    - name: Notify on success
      if: success()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          const branch = context.ref.replace('refs/heads/', '');
          const commit = context.sha;
          const commitUrl = `https://github.com/${owner}/${repo}/commit/${commit}`;
          
          let message = `✅ 빌드 성공 알림\n\n`;
          message += `브랜치: ${branch}\n`;
          message += `커밋: ${commitUrl}\n`;
          message += `작업자: ${context.actor}\n\n`;
          message += `테스트를 제외한 빌드가 성공적으로 완료되었습니다.`;
          
          if (context.payload.pull_request) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: owner,
              repo: repo,
              body: message
            });
          }